#!/usr/bin/env bash
# -*- coding: utf-8; mode: sh indent-tabs-mode: nil -*-
# SPDX-License-Identifier: GNU General Public License v3.0 or later

[[ -z "${REPO_ROOT}" ]] &&  REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"

LXC_SUITES=()
for file in "${REPO_ROOT}"/*.env; do
    file="$(basename "$file")"
    LXC_SUITES+=("${file%.*}")
done

suite_usage() {
    _cmd="$(basename "$0")"
    cat <<EOF
usage::
  $_cmd <suite-name> <image-name> install
  $_cmd <suite-name> <image-name> remove
  $_cmd <suite-name> <image-name> [command ...]

install     :  build container from <image-name> and install <suite-name>
remove      :   delete container <image-name> of <suite-name>
command ... :  execute command in container <image-name> from <suite-name>
EOF
    echo "LXC suites:"
    echo "  ${LXC_SUITES[*]}" | $FMT
    if [[ "${LXC_SUITES[*]}" == "" ]]; then
        echo "suite images:"
        echo "  ${LOCAL_IMAGES[*]}" | $FMT
    fi
}

_init_suite(){
    [[ -z $1 ]] && echo "ERROR: missing argument: <suite-name>" >&2 && exit 42
    LXC_ENV="${REPO_ROOT}/$1.env"
    [[ ! -e $LXC_ENV ]] && echo "ERROR: lxc suite does not exists: ${LXC_ENV}" >&2 && exit 42
    export LXC_ENV
    # shellcheck source=utils/lxc.sh
    source "${REPO_ROOT}/utils/lxc.sh" --source
}


_load_lib(){
    # shellcheck source=utils/lib.sh
    source "${REPO_ROOT}/utils/lib.sh"
}

suite_main() {

    case $1 in
        ''|-h|--help)
            _load_lib
            suite_usage
            exit
        ;;
    esac
    _init_suite "$1"; shift
    image="$1"; shift

    case $1 in
        install)
            suite_main_install "$image"
            ;;
        remove)
            suite_main_remove "$image"
            ;;
        *)
            [[ -z $image ]] && echo "ERROR: missing argument: <image-name>" >&2 && exit 42
            suite_main_cmd "$image" "$@"
            ;;
    esac
}

# ----------------------------------------------------------------------------
suite_main "$@"
# ----------------------------------------------------------------------------
