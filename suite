#!/usr/bin/env bash
# -*- coding: utf-8; mode: sh indent-tabs-mode: nil -*-
# SPDX-License-Identifier: GNU General Public License v3.0 or later

[[ -z "${REPO_ROOT}" ]] &&  REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"

LXC_SUITES=()
for file in "${REPO_ROOT}"/*.env; do
    file="$(basename "$file")"
    LXC_SUITES+=("${file%.*}")
done

_suite_name="<suite-name>"
_image_name="<image-name>"

suite_usage() {
    _cmd="$(basename "$0") $_suite_name $_image_name"
    if [[ -n $LXC_SUITE_NAME ]];then
        _cmd="./${LXC_SUITE_NAME} $_image_name"
    fi
    cat <<EOF
usage::
  $_cmd create
  $_cmd drop
  $_cmd { command .. }
  $_cmd cmd { command .. }
  $_cmd [pkg-[install|remove] { pkg-name .. }
  $_cmd root

create:
  Build container from $_image_name and install <suite-name>.
drop:
  Delete container $_image_name of <suite-name>.
{ command .. }:
  Execute { command .. } as user '${SERVICE_USER:-root}' in container
  $_image_name from suite <$_suite_name>.
cmd { command .. }:
  Execute { command .. } in a 'root' bash with './utils/lib.sh' *sourced*.
pkg-install / pkg-remove { pkg-name .. }:
  Install / remove packages { pkg-name .. } in container $_image_name
  from suite <$_suite_name>.
root:
  start a bash for user root in the container
EOF
    echo "LXC suites:"
    echo "  ${LXC_SUITES[*]}" | $FMT
    if [[ -n ${LOCAL_IMAGES[*]} ]]; then
        echo "suite images:"
        echo "  ${LOCAL_IMAGES[*]}" | $FMT
    fi
}

_init_suite(){
    [[ -z $1 ]] && echo "ERROR: missing argument: <suite-name>" >&2 && exit 42
    LXC_ENV="./$1.env"
    [[ ! -e ${REPO_ROOT}/$1.env ]] && echo "ERROR: lxc suite does not exists: ${LXC_ENV}" >&2 && exit 42
    export LXC_ENV
    if [[ $LXC_ENV != $("${REPO_ROOT}/utils/lxc.sh" --getenv LXC_ENV) ]];then
        _load_lib
        die 42 "LXC_ENV in subprocess is different!"
    fi
    # shellcheck source=utils/lxc.sh
    source "${REPO_ROOT}/utils/lxc.sh" --source
}


_load_lib(){
    # shellcheck source=utils/lib.sh
    source "${REPO_ROOT}/utils/lib.sh"
}

suite_main() {

    case $1 in
        ''|-h|--help) _load_lib; suite_usage;  exit
        ;;
    esac
    _suite_name="$1"; shift
    _init_suite "$_suite_name"
    case $1 in
        ''|-h|--help) _load_lib; suite_usage;  exit
        ;;
    esac

    _image_name="$1"; shift
    [[ -z $_image_name ]] && echo "ERROR: missing argument: <image-name>" >&2 && exit 42

    sudo_or_exit

    container="$LXC_HOST_PREFIX-$_image_name"
    case $1 in
        drop|root|pkg-*)
            if ! lxc_exists "$container";then
                err_msg "container ** $container ** does not yet exists"
                exit 42
            fi
    esac
    case $1 in
        create)
            suite_main_create "$_image_name"
            ;;
        drop)
            suite_main_drop "$_image_name"
            ;;
        root)
            shift
            lxc_exec_cmd "$container" 'bash'
            ;;
        pkg-install)
            shift
            lxc_exec_cmd "$container" 'source "./utils/lib.sh"; pkg_install' "$@"
            ;;
        pkg-remove)
            shift
            lxc_exec_cmd "$container" 'source "./utils/lib.sh"; pkg_remove' "$@"
            ;;
        cmd)
            shift
            if [[ -z "$*" ]]; then
                suite_usage
                die 42 "missing '{ command .. }'"
            fi
            lxc_exec_cmd "$container" 'source "./utils/lib.sh";' "$@"
            ;;
        *)
            if [[ -z "$*" ]]; then
                suite_usage
                die 42 "missing '{ command .. }'"
            fi
            suite_main_cmd "$_image_name" "$@"
            ;;
    esac
}

# ----------------------------------------------------------------------------
suite_main "$@"
# ----------------------------------------------------------------------------
