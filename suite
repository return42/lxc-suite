#!/usr/bin/env bash
# -*- coding: utf-8; mode: sh indent-tabs-mode: nil -*-
# SPDX-License-Identifier: GNU General Public License v3.0 or later

[[ -z "${REPO_ROOT}" ]] &&  REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"

LXC_SUITES=()
for file in "${REPO_ROOT}"/*.env; do
    file="$(basename "$file")"
    LXC_SUITES+=("${file%.*}")
done

_suite_name="<suite_name>"

suite_usage() {
    _cmd="$(basename "$0")"
    cat <<EOF
usage::
  $_cmd $_suite_name <image-name> create
  $_cmd $_suite_name <image-name> drop
  $_cmd $_suite_name <image-name> [command ..]
  $_cmd $_suite_name <image-name> cmd [command ..]
  $_cmd $_suite_name <image-name> pkg-install [pkg-name ..]
  $_cmd $_suite_name <image-name> root

create:
  build container from <image-name> and install <suite-name>
drop:
  delete container <image-name> of <suite-name>
[command ..]:
  execute [command ..] as user ${SERVICE_USER:-root} in container <image-name>
  from <suite-name>
cmd [command ..]:
  execute [command ..] in a root bash with ``./utils/lib.sh`` *sourced*::
     $_cmd $_suite_name <image-name> cmd globalIPs
pkg-install [pkg-name ..]:
  install packages [pkg-name ..] into suite container by <image-name>
root:
  start a bash for user root in the container
EOF
    echo "LXC suites:"
    echo "  ${LXC_SUITES[*]}" | $FMT
    if [[ "${LXC_SUITES[*]}" == "" ]]; then
        echo "suite images:"
        echo "  ${LOCAL_IMAGES[*]}" | $FMT
    fi
}

_init_suite(){
    [[ -z $1 ]] && echo "ERROR: missing argument: <suite-name>" >&2 && exit 42
    LXC_ENV="./$1.env"
    [[ ! -e ${REPO_ROOT}/$1.env ]] && echo "ERROR: lxc suite does not exists: ${LXC_ENV}" >&2 && exit 42
    export LXC_ENV
    if [[ $LXC_ENV != $("${REPO_ROOT}/utils/lxc.sh" --getenv LXC_ENV) ]];then
        _load_lib
        die 42 "LXC_ENV in subprocess is different!"
    fi
    # shellcheck source=utils/lxc.sh
    source "${REPO_ROOT}/utils/lxc.sh" --source
}


_load_lib(){
    # shellcheck source=utils/lib.sh
    source "${REPO_ROOT}/utils/lib.sh"
}

suite_main() {

    case $1 in
        ''|-h|--help) _load_lib; suite_usage;  exit
        ;;
    esac
    _suite_name="$1"; shift
    _init_suite "$_suite_name"
    case $1 in
        ''|-h|--help) _load_lib; suite_usage;  exit
        ;;
    esac

    image="$1"; shift
    [[ -z $image ]] && echo "ERROR: missing argument: <image-name>" >&2 && exit 42
    container="$LXC_HOST_PREFIX-$image"
    if ! lxc_exists "$container";then
        err_msg "container ** $container ** does not yet exists"
        exit 42
    fi
    sudo_or_exit

    case $1 in
        create)
            suite_main_create "$image"
            ;;
        drop)
            suite_main_drop "$image"
            ;;
        root)
            shift
            lxc_exec_cmd "$container" 'bash'
            ;;
        pkg-install)
            shift
            lxc_exec_cmd "$container" 'source "./utils/lib.sh"; pkg_install' "$@"
            ;;
        pkg-remove)
            shift
            lxc_exec_cmd "$container" 'source "./utils/lib.sh"; pkg_remove' "$@"
            ;;
        cmd)
            shift
            [[ -z "$*" ]] && die 42 "missing 'command ..'"
            lxc_exec_cmd "$container" 'source "./utils/lib.sh";' "$@"
            ;;
        *)
            [[ -z "$*" ]] && suite_usage; die 42 "missing 'command ..'"
            suite_main_cmd "$image" "$@"
            ;;
    esac
}

# ----------------------------------------------------------------------------
suite_main "$@"
# ----------------------------------------------------------------------------
