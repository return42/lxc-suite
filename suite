#!/usr/bin/env bash
# -*- coding: utf-8; mode: sh indent-tabs-mode: nil -*-
# SPDX-License-Identifier: GNU General Public License v3.0 or later

[[ -z "${REPO_ROOT}" ]] &&  REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"

LXC_SUITES=()
for file in "${REPO_ROOT}"/*-env/suite.sh; do
    file="$(basename "$(dirname "$file")")"
    LXC_SUITES+=("${file%-env}")
done
LXC_SUITE_NAME="<suite-name>"
LXC_SUITE_IMAGE="<image-name>"

suite_usage() {
    _cmd="$(basename "$0") $LXC_SUITE_NAME $LXC_SUITE_IMAGE"
    if [[ $LXC_SUITE_NAME != "<suite-name>" ]]; then
        _cmd="./${LXC_SUITE_NAME} ${LXC_SUITE_IMAGE}"
    fi
    cat <<EOF
usage::
  $_cmd create
  $_cmd build
  $_cmd drop
  $_cmd [start|stop]
  $_cmd { command .. }
  $_cmd cmd { command .. }
  $_cmd pkg-[install|remove] { pkg-name .. }
  $_cmd install [suite|base]
  $_cmd uninstall [suite]
  $_cmd show [images|suite|info|config]
  $_cmd root
  $_cmd --

create:
  Build container from image $LXC_SUITE_IMAGE and install suite $LXC_SUITE_NAME.
build:
  Build and launch container '$LXC_HOST_PREFIX-$LXC_SUITE_IMAGE'
  and 'install base' packages
install:
  :base:         prepare LXC; install basic packages
  :suite:        install LXC ${LXC_SUITE_NAME} suite into container
uninstall
  :suite:        uninstall LXC ${LXC_SUITE_NAME} suite from container
drop:
  Delete container from image $LXC_SUITE_IMAGE (suite $LXC_SUITE_NAME).
[start|stop]:
  start/stop container
{ command .. }:
  Execute { command .. } as user '${SERVICE_USER:-root}' in container $LXC_SUITE_IMAGE
  from suite $LXC_SUITE_NAME.
cmd { command .. }:
  Execute { command .. } in root's bash with './utils/lib.sh' sourced.
pkg-install / pkg-remove { pkg-name .. }:
  Install / remove packages { pkg-name .. } in container from image
  $LXC_SUITE_IMAGE (suite $LXC_SUITE_NAME)
show:
  :info:         show container info
  :config:       show container config
  :suite:        show services of the container
  :images:       show information of the image
root:
  start a bash for user root in the container
--:
  run additional commands from suite
EOF
    if [[ $LXC_SUITE_NAME == "<suite-name>" ]]; then
        echo "LXC suites:"
        echo "  ${LXC_SUITES[*]}" | $FMT
    fi

    if [[ -n ${LOCAL_IMAGES[*]} ]]; then
        echo "suite images:"
        echo "  ${LOCAL_IMAGES[*]}" | $FMT
    fi
}

init_suite(){
    [[ -z $1 ]] \
        && echo "ERROR: missing argument: <suite-name>" >&2 && exit 42

    LXC_ENV="$1-env/suite.sh"
    [[ ! -e ${REPO_ROOT}/${LXC_ENV} ]] \
        && echo "ERROR: lxc suite does not exists: ${REPO_ROOT}/${LXC_ENV}.env " >&2 && exit 42

    export LXC_ENV
    if [[ $LXC_ENV != $("${REPO_ROOT}/utils/lxc.sh" --getenv LXC_ENV) ]];then
        _load_lib
        die 42 "LXC_ENV in subprocess is different!"
    fi
    # shellcheck source=utils/lxc.sh
    source "${REPO_ROOT}/utils/lxc.sh" --source
}


_load_lib(){
    # shellcheck source=utils/lib.sh
    source "${REPO_ROOT}/utils/lib.sh"
}

check_help_option() {
    case $1 in
        ''|-h|--help) _load_lib; suite_usage;  exit
        ;;
    esac
}

suite_main() {

    check_help_option "$1"
    LXC_SUITE_NAME="$1"; shift
    check_help_option "$1"
    init_suite "$LXC_SUITE_NAME"

    LXC_SUITE_IMAGE="$1"; shift
    check_help_option "$1"
    [[ -z $LXC_SUITE_IMAGE ]] && echo "ERROR: missing argument: <image-name>" >&2 && exit 42

    sudo_or_exit

    local container="$LXC_HOST_PREFIX-$LXC_SUITE_IMAGE"
    case $1 in
        drop|root|pkg-*)
            if ! lxc_exists "$container";then
                err_msg "container ** $container ** does not yet exists"
                exit 42
            fi
    esac
    case $1 in
        create)
            suite_main_create "$LXC_SUITE_IMAGE"
            ;;
        build)
            build_container "$container"
            ;;
        install)
            case $2 in
                suite|base)
                    lxc_exec_cmd "$container" "${LXC_REPO_ROOT}/utils/lxc.sh" __install "$2"
                    ;;
                '') die 42 "missing 'install' option" ;;
                *) die 42 "unknow 'show' option: $2" ;;
            esac
            ;;
       uninstall)
            case $2 in
                suite)
                    lxc_exec_cmd "$container" "${LXC_REPO_ROOT}/utils/lxc.sh" __uninstall "$2"
                    ;;
                '') die 42 "missing 'uninstall' option" ;;
                *) die 42 "unknow 'show' option: $2" ;;
            esac
            ;;
        drop)
            suite_main_drop "$LXC_SUITE_IMAGE"
            ;;
        start|stop)
            lxc "$1" "$container"
            ;;
        show)
            case $2 in
                suite)
                    lxc_exec_cmd "$container" "${LXC_REPO_ROOT}/utils/lxc.sh" __show suite
                    ;;
                config)
                    lxc config show "$container"
                    ;;
                info)
                    lxc info "$container"
                    ;;
                image)
                    lxc image info "$LXC_SUITE_IMAGE"
                    ;;
                '')
                    die 42 "missing 'show' option"
                    ;;
                *)
                    die 42 "unknow 'show' option: $2"
                    ;;
            esac
            ;;
        root)
            shift
            lxc_exec_cmd "$container" 'bash'
            ;;
        pkg-install)
            shift
            lxc_exec_cmd "$container" 'source "./utils/lib.sh"; pkg_install' "$@"
            ;;
        pkg-remove)
            shift
            lxc_exec_cmd "$container" 'source "./utils/lib.sh"; pkg_remove' "$@"
            ;;
        cmd)
            shift
            if [[ -z "$*" ]]; then
                suite_usage
                die 42 "missing '{ command .. }'"
            fi
            lxc_exec_cmd "$container" 'source "./utils/lib.sh";' "$@"
            ;;
        --)
            shift
            suite_commands "$@"
            ;;
        *)
            if [[ -z "$*" ]]; then
                suite_usage
                die 42 "missing '{ command .. }'"
            fi
            suite_main_cmd "$LXC_SUITE_IMAGE" "$@"
            ;;
    esac
}

# ----------------------------------------------------------------------------
suite_main "$@"
# ----------------------------------------------------------------------------
